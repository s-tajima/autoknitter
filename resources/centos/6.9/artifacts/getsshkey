#!/bin/bash
# chkconfig: 4 11 11
# description: Get SSH keys from meta-data to create root's authorized_keys file


start() {
  if [ ! -d /root/.ssh ]; then
    echo "Create /root/.ssh directory."
    mkdir -p /root/.ssh
  fi
  chmod 700 /root/.ssh

  if [ ! -e /root/.ssh/authorized_keys ]; then
    echo "Create the empty authorized_keys."
    touch /root/.ssh/authorized_keys
  fi
  chmod 600 /root/.ssh/authorized_keys

  while true; do
    echo "Get public keys"
    key_list=`curl -s -L -f http://169.254.169.254/latest/meta-data/public-keys/`
    code=$?
    if [ $code -eq 0 ]; then
      break
    fi
    sleep 1
  done

  while read -r LINE; do
    equal_index=`expr index "$LINE" "="`
    key_index=${LINE:0:$equal_index-1}
    key_name=${LINE:$equal_index}

    append_to_auth_keys "$key_index" "$key_name"
  done <<< $key_list
}

append_to_auth_keys() {
  key_index=$1
  key_name=$2

  while true; do
    code=`curl -s -L -w '%{http_code}' -o "/root/.ssh/${key_name}.pub" "http://169.254.169.254/latest/meta-data/public-keys/${key_index}/openssh-key"`
    if [ $code -lt 500 ]; then
      break
    fi
    sleep 1
  done

  if [ $code -ge 200 -a $code -lt 300 ]; then
    if ! `grep -q -f "/root/.ssh/${key_name}.pub" /root/.ssh/authorized_keys`; then
      cat "/root/.ssh/${key_name}.pub" >> /root/.ssh/authorized_keys
    fi
  fi
}

stop() {
  echo "Nothing to do"
}

case "$1" in
  start)
    start
    ;;
  stop)
    stop
    ;;
  *)
    echo $"Usage: $0 {start|stop}"
    exit 1
esac

exit $?
